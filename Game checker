local http_request = syn and syn.request or http_request or request or (http and http.request)
local webhook_url = "https://discord.com/api/webhooks/1311393677553176657/39rb_e0K19kSnqqnkFhdZnpSDp2aNOT8qzdeHHlZPMQU-C-yihyGxKaaX2M9SdlpQHFn"

local function getHWID()
    return game:GetService("RbxAnalyticsService"):GetClientId()
end

local function getDateTime()
    local date = os.date("%Y-%m-%d")
    local time = os.date("%H:%M:%S")
    return date, time
end

local function getUsername()
    return game:GetService("Players").LocalPlayer.Name
end

local hwid = getHWID()
local date, time = getDateTime()
local username = getUsername()

local data = {
    ["content"] = "**Script Executed**",
    ["embeds"] = {
        {
            ["title"] = "Execution Details",
            ["fields"] = {
                {["name"] = "Username", ["value"] = username, ["inline"] = true},
                {["name"] = "Date", ["value"] = date, ["inline"] = true},
                {["name"] = "Time", ["value"] = time, ["inline"] = true},
                {["name"] = "HWID", ["value"] = hwid, ["inline"] = false},
            },
            ["color"] = 16711680 -- Red color
        }
    }
}

local headers = {["Content-Type"] = "application/json"}

http_request({
    Url = webhook_url,
    Method = "POST",
    Headers = headers,
    Body = game:GetService("HttpService"):JSONEncode(data)
})

-- Load the target script

-- Game PlaceId to Script Map
local gameScripts = {
    [6751580221] = function() -- Replace with your game's PlaceId --Mountfall OG
        print("Running Script for Mountfall")
        loadstring(game:HttpGet("https://pastebin.com/raw/mV4HLUpd"))()
        -- Script logic for Game 0
    end,

    [6751580221] = function() -- Replace with your game's PlaceId --Fisch
        print("Running Script for Fisch")
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Tivalls/AutoExec/refs/heads/main/Fisch"))()
        -- Script logic for Game 1
    end,

    [6751580221] = function() -- Replace with your game's PlaceId --BS2
        print("Running Script for Blood Samurai 2")
        loadstring(game:HttpGet("https://pastebin.com/raw/mV4HLUpd"))()
        -- Script logic for Game 2
    end,

    [4111023553] = function() -- Replace with another PlaceId --Deepwoken
        print("Running Script for Deepwoken")
        loadstring(game:HttpGet("https://pastebin.com/raw/jhswRtDb"))()
        -- Script logic for Game 3
    end,

    [6032399813] = function() -- Replace with another PlaceId --Deepwoken
        print("Running Script for Deepwoken")
        loadstring(game:HttpGet("https://pastebin.com/raw/jhswRtDb"))()
        -- Script logic for Game 4
    end,

    [6473861193] = function() -- Replace with another PlaceId --Deepwoken
        print("Running Script for Deepwoken")
        loadstring(game:HttpGet("https://pastebin.com/raw/jhswRtDb"))()
        -- Script logic for Game 5
    end,

    [5735553160] = function() -- Replace with another PlaceId --Deepwoken
        print("Running Script for Deepwoken")
        loadstring(game:HttpGet("https://pastebin.com/raw/jhswRtDb"))()
        -- Script logic for Game 6
    end,

    [8668476218] = function() -- Replace with another PlaceId --Deepwoken
        print("Running Script for Deepwoken")
        loadstring(game:HttpGet("https://pastebin.com/raw/jhswRtDb"))()
        -- Script logic for Game 7
    end,

    [16004121360] = function() -- Another PlaceId --Mountfall
        print("Running Script for Mountfall: Descent")
        loadstring(game:HttpGet("https://pastebin.com/raw/TiTbnvz8"))()
        -- Script logic for Game 8
    end
}

-- Default Script (if PlaceId is not recognized)
local defaultScript = function()
    print("PlaceId not recognized. Running default script.")
    loadstring(game:HttpGet("https://pastebin.com/raw/MpZ4M8j6"))()
    -- Default script logic
end

-- Get the current game's PlaceId
local currentPlaceId = game.PlaceId

-- Run the appropriate script
if gameScripts[currentPlaceId] then
    gameScripts[currentPlaceId]() -- Call the script function for the detected PlaceId
else
    defaultScript() -- Run default script if PlaceId is not in the map
end
